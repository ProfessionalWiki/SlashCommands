name: CI

on:
  push:
  pull_request:

jobs:
  test:
    name: "PHPUnit: MW ${{ matrix.mw }}, PHP ${{ matrix.php }}"

    strategy:
      fail-fast: false
      matrix:
        include:
          - mw: 'REL1_39'
            php: '8.1'
          - mw: 'REL1_39'
            php: '8.2'
          - mw: 'master'
            php: '8.2'

    runs-on: ubuntu-latest

    env:
      NEO4J_BOLT_URL_OVERRIDE: bolt://neo4j:password@localhost:7688

    services:
      test_neo:
        image: neo4j
        ports:
          - 7688:7688
          - 7475:7475
        env:
          NEO4J_AUTH: neo4j/password
          NEO4J_server_bolt_listen__address: :7688
          NEO4J_server_http_listen__address: :7475

    defaults:
      run:
        working-directory: mediawiki

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl
          tools: composer

      - name: Cache MediaWiki
        id: cache-mediawiki
        uses: actions/cache@v3
        with:
          path: |
            mediawiki
            !mediawiki/extensions/
            !mediawiki/vendor/
          key: mw_${{ matrix.mw }}-php${{ matrix.php }}_v3

      - name: Cache Composer cache
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: composer-php${{ matrix.php }}

      - uses: actions/checkout@v3
        with:
            path: EarlyCopy

      - name: Install MediaWiki
        if: steps.cache-mediawiki.outputs.cache-hit != 'true'
        working-directory: ~
        run: bash EarlyCopy/.github/workflows/installMediaWiki.sh ${{ matrix.mw }} SlashCommands

      - uses: actions/checkout@v3
        with:
          path: mediawiki/extensions/SlashCommands

      - run: composer update

      - name: Run update.php
        run: php maintenance/update.php --quick

      - name: Run PHPUnit
        run: php tests/phpunit/phpunit.php -c extensions/SlashCommands/
        if: matrix.mw != 'master'

      - name: Run PHPUnit with code coverage
        run: php tests/phpunit/phpunit.php -c extensions/SlashCommands/ --coverage-clover coverage.xml
        if: matrix.mw == 'master'

#      - name: Upload code coverage
#        run: bash <(curl -s https://codecov.io/bash)
#        if: matrix.mw == 'master'

      - name: Run parser tests
        run: php tests/parser/parserTests.php --changetree "null"
        if: true



  PHPStan:
    name: "PHPStan: MW ${{ matrix.mw }}, PHP ${{ matrix.php }}"

    strategy:
      matrix:
        include:
          - mw: 'REL1_39'
            php: '8.1'

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: mediawiki

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring
          tools: composer, cs2pr

      - name: Cache MediaWiki
        id: cache-mediawiki
        uses: actions/cache@v3
        with:
          path: |
            mediawiki
            mediawiki/extensions/
            mediawiki/vendor/
          key: mw_${{ matrix.mw }}-php${{ matrix.php }}_v3

      - name: Cache Composer cache
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: composer_static_analysis

      - uses: actions/checkout@v3
        with:
            path: EarlyCopy

      - name: Install MediaWiki
        if: steps.cache-mediawiki.outputs.cache-hit != 'true'
        working-directory: ~
        run: bash EarlyCopy/.github/workflows/installMediaWiki.sh ${{ matrix.mw }} SlashCommands

      - uses: actions/checkout@v3
        with:
          path: mediawiki/extensions/SlashCommands

      - name: Composer allow-plugins
        run: composer config --no-plugins allow-plugins.composer/installers true

      - run: composer update

      - name: Composer install
        run: cd extensions/SlashCommands && composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader

      - name: PHPStan
        run: cd extensions/SlashCommands && php vendor/bin/phpstan analyse --error-format=checkstyle --no-progress | cs2pr




  Psalm:
      name: "Psalm: MW ${{ matrix.mw }}, PHP ${{ matrix.php }}"

      strategy:
        matrix:
          include:
            - mw: 'REL1_39'
              php: '8.1'

      runs-on: ubuntu-latest

      defaults:
          run:
              working-directory: mediawiki

      steps:
          - name: Setup PHP
            uses: shivammathur/setup-php@v2
            with:
                php-version: ${{ matrix.php }}
                extensions: mbstring
                tools: composer, cs2pr

          - name: Cache MediaWiki
            id: cache-mediawiki
            uses: actions/cache@v3
            with:
                path: |
                    mediawiki
                    mediawiki/extensions/
                    mediawiki/vendor/
                key: mw_${{ matrix.mw }}-php${{ matrix.php }}_v3

          - name: Cache Composer cache
            uses: actions/cache@v3
            with:
                path: ~/.composer/cache
                key: composer_static_analysis

          - uses: actions/checkout@v3
            with:
                path: EarlyCopy

          - name: Install MediaWiki
            if: steps.cache-mediawiki.outputs.cache-hit != 'true'
            working-directory: ~
            run: bash EarlyCopy/.github/workflows/installMediaWiki.sh ${{ matrix.mw }} SlashCommands

          - uses: actions/checkout@v3
            with:
                path: mediawiki/extensions/SlashCommands

          - name: Composer allow-plugins
            run: composer config --no-plugins allow-plugins.composer/installers true

          - run: composer update

          - name: Composer install
            run: cd extensions/SlashCommands && composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader

          - name: Psalm
            run: cd extensions/SlashCommands && pwd && php vendor/bin/psalm --config=psalm.xml --shepherd --stats




  code-style:
    name: "Code style: MW ${{ matrix.mw }}, PHP ${{ matrix.php }}"

    strategy:
      matrix:
        include:
          - mw: 'REL1_39'
            php: '8.1'

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: mediawiki/extensions/SlashCommands

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl, php-ast
          tools: composer

      - name: Cache MediaWiki
        id: cache-mediawiki
        uses: actions/cache@v3
        with:
          path: |
            mediawiki
            !mediawiki/extensions/
            !mediawiki/vendor/
          key: mw_static_analysis

      - name: Cache Composer cache
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: mw_${{ matrix.mw }}-php${{ matrix.php }}_v3

      - name: Install MediaWiki
        if: steps.cache-mediawiki.outputs.cache-hit != 'true'
        working-directory: ~
        run: curl https://gist.githubusercontent.com/JeroenDeDauw/49a3858653ff4b5be7ec849019ede06c/raw/installMediaWiki.sh | bash -s ${{ matrix.mw }} SlashCommands

      - uses: actions/checkout@v3
        with:
          path: mediawiki/extensions/SlashCommands

      - name: Composer install
        run: composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader

      - run: vendor/bin/phpcs -p -s


  lint-visual-editor:
    name: "Lint (visual-editor)"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19
      - run: |
          echo "::remove-matcher owner=eslint-compact::"
          echo "::remove-matcher owner=eslint-stylish::"
      - run: npm install
        working-directory: ./resources/visual-editor
      - run: npm run lint-no-fix
        working-directory: ./resources/visual-editor

  build-visual-editor:
    name: "Test build (visual-editor)"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19
      - run: npm install
        working-directory: ./resources/visual-editor
      - run: npm run build
        working-directory: ./resources/visual-editor
